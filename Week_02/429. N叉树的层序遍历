/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> trees = new ArrayList<>();
        if(root == null)
            return trees;
        Queue<Node> queue = new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty()){
            List<Integer> level = new ArrayList<>();
            int size = queue.size();
            for(int i = 0;i < size; i++){
                Node node = queue.poll();
                level.add(node.val);
                queue.addAll(node.children);
            }
            trees.add(level);          
        }
        return trees;   
    }
}
//时间复杂度O(n),空间复杂度O(n)